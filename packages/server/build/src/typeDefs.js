"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_1 = require("apollo-server");
var typeDefs = apollo_server_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  enum AccountType {\n    BASIC\n    PREMIUM\n  }\n\n  enum Role {\n    ARTIST\n    FAN\n  }\n\n  enum CollectionType {\n    SINGLE\n    EP\n    ALBUM\n    MIX\n  }\n\n  enum SocialType {\n    FACEBOOK\n    TWITTER\n    INSTAGRAM\n    TIKTOK\n    SOUNDCLOUD\n    SPOTIFY\n  }\n\n  enum DanceGenre {\n    KIZOMBA\n    URBAN_KIZ\n    GHETTO_ZOUK\n    AFROBEATS\n    SALSA\n    BACHATA\n    SWING\n    NEW_STYLE_HUSTLE\n    BRAZILIAN_ZOUK\n  }\n\n  union CollectionEntry = Track | Mix\n\n  type Settings {\n    id: ID!\n    userId: ID!\n    emailNotifications: Boolean!\n    pushNotifications: Boolean!\n  }\n\n  type SocialLinks {\n    type: SocialType!\n    url: String!\n  }\n\n  type Collection {\n    id: ID!\n    createdAt: String!\n    title: String!\n    artists: [Artist!]!\n    collectionType: CollectionType!\n    tracks: [CollectionEntry!]!\n    label: [String!]!\n    collectionImage: String\n    createdBy: Artist\n    yearPublished: String!\n    credits: String\n  }\n\n  type Artist {\n    id: ID!\n    createdAt: String!\n    name: String!\n    avatar: String\n    releases: [Collection]\n    owner: User!\n    fans: [User!]\n    country: String!\n    biography: String\n    tag: String\n    socialLinks: [SocialLinks!]\n    website: String\n    galleryImages: [String!]\n  }\n\n  type Mix {\n    id: ID!\n    createdAt: String!\n    createdBy: [Artist!]\n    producedBy: [Artist!]\n    trackImage: String\n    filename: String!\n    title: String!\n    likes: Int\n    length: String!\n    label: String\n    plays: Int\n    tracks: [Track]\n    trackGenre: [DanceGenre]\n  }\n\n  type Track {\n    id: ID!\n    createdAt: String!\n    createdBy: [Artist!]\n    performedBy: [Artist!]\n    producedBy: [Artist!]\n    artists: [Artist!]\n    trackImage: String\n    filename: String!\n    title: String!\n    likes: Int\n    length: String!\n    label: String\n    plays: Int\n    trackGenre: [DanceGenre]\n    credits: String\n  }\n\n  type Playlist {\n    id: ID!\n    createdAt: String!\n    isPrivate: Boolean!\n    tracks: [Track!]!\n    playlistImage: String\n    createdBy: User!\n    followers: [User!]\n    trackGenre: DanceGenre\n    title: String!\n    description: String\n  }\n\n  type User {\n    id: ID!\n    email: String!\n    name: String!\n    createdAt: String!\n    verified: Boolean!\n    accountType: AccountType!\n    role: Role!\n    avatar: String\n    alias: String\n    playlists: [Playlist!]\n    collectionsSaved: [Collection!]\n    following: [Artist!]\n    friends: [User!]\n    likedSongs: [Track!]\n    country: String!\n    settings: Settings!\n  }\n\n  type Query {\n    me: User!\n  }\n"], ["\n  enum AccountType {\n    BASIC\n    PREMIUM\n  }\n\n  enum Role {\n    ARTIST\n    FAN\n  }\n\n  enum CollectionType {\n    SINGLE\n    EP\n    ALBUM\n    MIX\n  }\n\n  enum SocialType {\n    FACEBOOK\n    TWITTER\n    INSTAGRAM\n    TIKTOK\n    SOUNDCLOUD\n    SPOTIFY\n  }\n\n  enum DanceGenre {\n    KIZOMBA\n    URBAN_KIZ\n    GHETTO_ZOUK\n    AFROBEATS\n    SALSA\n    BACHATA\n    SWING\n    NEW_STYLE_HUSTLE\n    BRAZILIAN_ZOUK\n  }\n\n  union CollectionEntry = Track | Mix\n\n  type Settings {\n    id: ID!\n    userId: ID!\n    emailNotifications: Boolean!\n    pushNotifications: Boolean!\n  }\n\n  type SocialLinks {\n    type: SocialType!\n    url: String!\n  }\n\n  type Collection {\n    id: ID!\n    createdAt: String!\n    title: String!\n    artists: [Artist!]!\n    collectionType: CollectionType!\n    tracks: [CollectionEntry!]!\n    label: [String!]!\n    collectionImage: String\n    createdBy: Artist\n    yearPublished: String!\n    credits: String\n  }\n\n  type Artist {\n    id: ID!\n    createdAt: String!\n    name: String!\n    avatar: String\n    releases: [Collection]\n    owner: User!\n    fans: [User!]\n    country: String!\n    biography: String\n    tag: String\n    socialLinks: [SocialLinks!]\n    website: String\n    galleryImages: [String!]\n  }\n\n  type Mix {\n    id: ID!\n    createdAt: String!\n    createdBy: [Artist!]\n    producedBy: [Artist!]\n    trackImage: String\n    filename: String!\n    title: String!\n    likes: Int\n    length: String!\n    label: String\n    plays: Int\n    tracks: [Track]\n    trackGenre: [DanceGenre]\n  }\n\n  type Track {\n    id: ID!\n    createdAt: String!\n    createdBy: [Artist!]\n    performedBy: [Artist!]\n    producedBy: [Artist!]\n    artists: [Artist!]\n    trackImage: String\n    filename: String!\n    title: String!\n    likes: Int\n    length: String!\n    label: String\n    plays: Int\n    trackGenre: [DanceGenre]\n    credits: String\n  }\n\n  type Playlist {\n    id: ID!\n    createdAt: String!\n    isPrivate: Boolean!\n    tracks: [Track!]!\n    playlistImage: String\n    createdBy: User!\n    followers: [User!]\n    trackGenre: DanceGenre\n    title: String!\n    description: String\n  }\n\n  type User {\n    id: ID!\n    email: String!\n    name: String!\n    createdAt: String!\n    verified: Boolean!\n    accountType: AccountType!\n    role: Role!\n    avatar: String\n    alias: String\n    playlists: [Playlist!]\n    collectionsSaved: [Collection!]\n    following: [Artist!]\n    friends: [User!]\n    likedSongs: [Track!]\n    country: String!\n    settings: Settings!\n  }\n\n  type Query {\n    me: User!\n  }\n"])));
exports.default = typeDefs;
var templateObject_1;
